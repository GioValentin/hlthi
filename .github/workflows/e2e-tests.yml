name: E2E Tests

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main, develop]
    paths:
      - 'apps/ehr/**'
      - 'apps/intake/**'
      - 'packages/ehr/**'
      - 'packages/utils/**'
      - 'packages/ui-components/**'
      - '.github/**'
      - '.prettierignore'
      - 'package.json'

jobs:
  prepare:
    if: github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Check out secrets repo
        uses: actions/checkout@v4
        with:
          repository: masslight/ottehr-secrets
          ssh-key: ${{ secrets.DEPLOY_OTTEHR_KEY }}
          path: 'secrets'

      - name: Setup environment
        run: |
          setup_env() {
            local app=$1
            mkdir -p "packages/$app/zambdas/.env"
            cp secrets/zambdas/* "packages/$app/zambdas/.env"
            mkdir -p "apps/$app/env"
            cp "secrets/$app/app/tests."*.json "apps/$app/env/"
            cp "secrets/$app/app/.env.local" "apps/$app/env/"
          }

          for app in ehr intake; do
            setup_env "$app"
          done

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium

  e2e-tests:
    needs: prepare
    strategy:
      matrix:
        app: [ehr, intake]
      fail-fast: false
    runs-on: ubuntu-latest-8-cores
    timeout-minutes: 15
    steps:
      - name: Run E2E tests
        run: npm run ${{ matrix.app }}:e2e:local
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.app }}
          path: |
            apps/${{ matrix.app }}/playwright-report/
            apps/${{ matrix.app }}/test-results/
          retention-days: 30
