import { expect, test } from '@playwright/test';
import { FillingInfo } from '../../utils/in-person/FillingInfo';

test.skip('TC30 Filled info is saved, when patient comes back to About the patient', async ({ page }) => {
  const fillingInfo = new FillingInfo(page);
  const continueButton = page.getByRole('button', { name: 'Continue' });
  await page.goto(`/location/${process.env.STATE_ONE}/${process.env.SLUG_ONE}/prebook`);
  await expect(page.getByRole('tab', { name: 'Today' })).toBeVisible({ timeout: 15000 });
  await expect(page.getByRole('button', { name: 'Logout' })).toBeVisible();
  await fillingInfo.selectSlot();
  await continueButton.click();
  await expect(page.getByRole('heading', { name: 'Welcome back!' })).toBeVisible({ timeout: 15000 });
  await expect(page.getByRole('heading', { name: 'Different family member' })).toBeVisible();
  await page.getByRole('heading', { name: 'Different family member' }).click();
  await continueButton.click();
  await expect(page.getByRole('heading', { name: 'About the patient' })).toBeVisible();
  const patientInfo = await fillingInfo.fillNewPatientInfo();
  const firstName = patientInfo.firstName;
  const lastName = patientInfo.lastName;
  const email = patientInfo.email;
  const birthSex = patientInfo.BirthSex;
  const reason = patientInfo.reason;
  const enteredReason = patientInfo.enteredReason;
  const middleName = await fillingInfo.fillMiddleName();
  const patientDOB = await fillingInfo.fillDOBgreater18();
  const month = patientDOB.randomMonth;
  const day = patientDOB.randomDay;
  const year = patientDOB.randomYear;
  await page.getByLabel('Patient', { exact: true }).check();
  await continueButton.click();
  await expect(page.getByRole('heading', { name: 'Review and submit' })).toBeVisible();
  await page.getByRole('button', { name: 'Back' }).click();
  await expect(page.locator('input#firstName')).toHaveValue(firstName);
  await expect(page.locator('input#lastName')).toHaveValue(lastName);
  await expect(page.locator('input#middleName')).toHaveValue(middleName);
  await expect(page.locator('input#email')).toHaveValue(email);
  await expect(page.getByText(reason)).toBeVisible();
  await expect(page.getByText(enteredReason)).toBeVisible();
  await expect(page.locator('#sex')).toHaveText(birthSex);
  await expect(page.getByRole('combobox').nth(0)).toHaveText(month);
  await expect(page.getByRole('combobox').nth(1)).toHaveText(day);
  await expect(page.getByRole('combobox').nth(2)).toHaveText(year);
  await expect(page.getByLabel('Patient', { exact: true })).toBeChecked();
});
